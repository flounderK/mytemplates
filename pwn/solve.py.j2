#!/usr/bin/python3
from pwn import *
import monkeyhex

context.log_level = 'debug'
context.terminal = ['termite', '-e']

# lib = ELF('/usr/lib/libc.so.6') if not args.REMOTE else ELF('{{ libc_path }}')
binary = context.binary = ELF('{{ binary_path }}')

def attach_gdb(p, commands=None):
    """Template to run gdb with predefined commands on a process."""
    val = """
    c
    """ if commands is None else commands
    res = gdb.attach(p, val)
    pause()
    return res


def new_proc(start_gdb=False, val=None):
    """Start a new process with predefined debug operations"""
    env = dict()
    # env['LD_PRELOAD'] = './libc.so.6'
    p = process(binary.path, env=env)
    if start_gdb is True:
        attach_gdb(p, val)
    return p

p = new_proc(False) if not args.REMOTE else remote('{{ remote_host }}', int('{{ port }}'))
# do leak / payload gen here

payload = b''

